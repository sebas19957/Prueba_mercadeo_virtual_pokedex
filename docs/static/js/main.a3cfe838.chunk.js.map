{"version":3,"sources":["hook/useLocalStorage.js","components/pokemon/InfoPokemonScreen.js","components/selectors/getPokemonByUrl.js","components/selectors/getAllPokemon.js","components/pokemon/CardScreen.js","components/pokemon/PokemonScreen.js","components/search/SearchScreen.js","hook/useForm.js","components/ui/Navbar.js","routers/AppRouter.js","PokedexApp.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","InfoPokemonScreen","history","pokemonId","useParams","pok","setPok","React","useEffect","obtenerDatos","a","fetch","data","json","pokemon","stats","type","types","className","src","sprites","other","dream_world","front_default","alt","name","map","st","i","stat","base_stat","tp","onClick","length","push","goBack","getPokemon","url","Promise","resolve","reject","then","res","getAllPokemon","CardScreen","to","id","style","textDecoration","color","maxWidth","textAlign","maxHeight","PokemonScreen","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","response","next","previous","loadPokemon","results","fetchData","prev","all","pokemonRecord","dataPokemon","fontFamily","SearchScreen","initialState","values","setValues","target","useForm","searchText","formValues","handleInputChange","reset","onSubmit","e","preventDefault","toLowerCase","trim","placeholder","autoComplete","onChange","Navbar","activeClassName","exact","AppRouter","path","component","PokedexApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3cfe838.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const  useLocalStorage = (key, initialValue) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        const item = window.localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n  \r\n    const setValue = value => {\r\n      try {\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        setStoredValue(valueToStore);\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n  \r\n    return [storedValue, setValue];\r\n  }","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useLocalStorage } from '../../hook/useLocalStorage';\r\n\r\nexport const InfoPokemonScreen = ({history}) => {\r\n\r\n    const { pokemonId } = useParams();\r\n    const [pok, setPok] = useLocalStorage('pokemon', '');\r\n\r\n    React.useEffect(() => {\r\n        obtenerDatos()\r\n        \r\n    },[pokemonId]);\r\n    \r\n    const obtenerDatos = async () => {\r\n        const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`);\r\n        const pokemon = await data.json();\r\n        setPok(pokemon);\r\n    }\r\n\r\n    const stats = pok.stats;\r\n    const type = pok.types; \r\n    // const {dream_world, ...res} = pok.sprites.other;\r\n    // const obj = Object.values(res);\r\n    // const imgn = (obj[0].front_default);\r\n    // console.log(imgn);\r\n   \r\n    const handleReturn = () => {\r\n\r\n        if( history.length <=2 ) {\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={ pok.sprites.other.dream_world.front_default }\r\n                    alt={ pok.name }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3> { pok.name } </h3>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-6\">\r\n                         <h4>Stats</h4>\r\n                         <ul className=\"list-group list-group-flush\">\r\n                            {\r\n                                stats.map( (st, i)  => (\r\n                                    <li className=\"list-group-item\" key={i}>{st.stat.name}: {st.base_stat} </li>\r\n                                ))\r\n                            } \r\n                         </ul>\r\n                     </div>\r\n                     <div className=\"col-6\">\r\n                     <h4>Elementos</h4>\r\n                         <ul className=\"list-group list-group-flush\">\r\n                             {\r\n                                 type.map( (tp, i)  => (\r\n                                     <li className=\"list-group-item\" key={i}>{tp.type.name}</li>\r\n                                 ))\r\n                             }\r\n                         </ul>\r\n                     </div>\r\n                </div>\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n\r\nexport function  getAllPokemon(url) {\r\n    return new Promise( (resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}","export async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const CardScreen = ({pokemon}) => {    \r\n\r\n    return (\r\n        <Link to={ `./pokemon/${ pokemon.id }`} style={{textDecoration: 'none', color: 'black'}}>\r\n            <div className=\"card ms-3 animate__animated animate__fadeIn\" style={ { maxWidth: 540, textAlign: 'center' } }>\r\n                <img   \r\n                    src={pokemon.sprites.other.dream_world.front_default} \r\n                    style={ { maxWidth: 240, maxHeight: 120} } \r\n                    alt={pokemon.name}\r\n                    className=\"mt-3\" \r\n                />\r\n                                        \r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\"> { pokemon.name } </h5>\r\n                </div>\r\n            </div>\r\n        </Link>    \r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { getPokemon } from '../selectors/getPokemonByUrl';\r\nimport { getAllPokemon } from '../selectors/getAllPokemon';\r\nimport { CardScreen } from './CardScreen';\r\n\r\nexport const PokemonScreen = () => {\r\n\r\n    const [pokemonData, setPokemonData] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState('');\r\n    const [prevUrl, setPrevUrl] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await getAllPokemon('https://pokeapi.co/api/v2/pokemon')\r\n            setNextUrl(response.next);\r\n            setPrevUrl(response.previous);\r\n            await loadPokemon(response.results);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const next = async () => {\r\n        setLoading(true);\r\n        const data = await getAllPokemon(nextUrl);\r\n        await loadPokemon(data.results);\r\n        setNextUrl(data.next);\r\n        setPrevUrl(data.previous);\r\n        setLoading(false);\r\n    }\r\n    \r\n      const prev = async () => {\r\n        if (!prevUrl) return;\r\n        setLoading(true);\r\n        const data = await getAllPokemon(prevUrl);\r\n        await loadPokemon(data.results);\r\n        setNextUrl(data.next);\r\n        setPrevUrl(data.previous);\r\n        setLoading(false);\r\n    }\r\n\r\n    const loadPokemon = async (data) => {\r\n        const dataPokemon = await Promise.all(data.map(async pokemon => {\r\n            const pokemonRecord = await getPokemon(pokemon)\r\n            return pokemonRecord\r\n        }));\r\n        setPokemonData(dataPokemon);\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h1 style={{ fontFamily: 'Pokemon-font, cursive' }}>\r\n                    Pokémons\r\n                </h1>\r\n                <hr className=\"mt-4\" />\r\n                <div style={{textAlign: 'center'}}>\r\n                    <button  className=\"btn btn-primary mr-2 mb-3 mt-1\" onClick={prev}>Prev</button>\r\n                    <button className=\"btn btn-primary mb-3 mt-1\" onClick={next}>Next</button>\r\n                </div>\r\n                <div className=\"alert alert-info\">\r\n                    Loading Pokemons...\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1\r\n                style={{ fontFamily: 'Pokemon-font, cursive' }}\r\n            >\r\n                Pokémons\r\n            </h1>\r\n            <hr className=\"mt-4\" />\r\n\r\n            <div style={{textAlign: 'center'}}>\r\n                <button  className=\"btn btn-primary mr-2 mb-3 mt-1\" onClick={prev}>Prev</button>\r\n                <button className=\"btn btn-primary mb-3 mt-1\" onClick={next}>Next</button>\r\n            </div>\r\n\r\n            <div className=\"card-columns animate__animated animate__fadeIn\">\r\n                {\r\n                    pokemonData.map(pokemon => (\r\n                        <CardScreen\r\n                            key={pokemon.id}\r\n                            pokemon={pokemon}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div style={{textAlign: 'center'}}>\r\n                <button  className=\"btn btn-primary mr-2 mb-3 mt-1\" onClick={prev}>Prev</button>\r\n                <button className=\"btn btn-primary mb-3 mt-1\" onClick={next}>Next</button>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from '../../hook/useForm';\r\nimport { useLocalStorage } from '../../hook/useLocalStorage';\r\nimport { CardScreen } from '../pokemon/CardScreen';\r\n\r\nexport const SearchScreen = () => {\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm({\r\n        searchText: ''\r\n    });\r\n    const {searchText} = formValues;\r\n    const [pok, setPok] = useLocalStorage('pokemonByName', '');\r\n    \r\n    const obtenerDatos = async (name) => {\r\n        const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}/`);\r\n        const pokemon = await data.json();\r\n        \r\n        setPok(pokemon);\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        obtenerDatos(searchText.toLowerCase().trim());\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={ { fontFamily: 'Pokemon-font, cursive'} }>Search Pokémon</h1>\r\n            <hr />\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <form onSubmit={ handleSearch }>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Find your pokémon\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn mt-2 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\" style={ { maxWidth: 300, maxHeight: 300, textAlign: 'center'} }>\r\n                    <h4 style={ { fontFamily: 'Pokemon-font, cursive'} }> Results </h4>\r\n                    <hr/>\r\n                    {\r\n                        <div style={ { maxWidth: 300, maxHeight: 300, textAlign: 'center'} }>\r\n                            <CardScreen \r\n                                key={pok.id}\r\n                                pokemon={pok}\r\n                            />\r\n                        </div>\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                style={ { fontFamily: 'Pokemon-font, cursive'} } \r\n                to=\"/pokemon\"\r\n            >\r\n                Pokémon\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { InfoPokemonScreen } from '../components/pokemon/InfoPokemonScreen';\r\nimport { PokemonScreen } from '../components/pokemon/PokemonScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div> \r\n                <Navbar/>\r\n                <div className=\"container mt-2\">\r\n                    <Switch>\r\n                        <Route exact path=\"/pokemon\" component={PokemonScreen} />\r\n                        <Route exact path=\"/pokemon/:pokemonId\" component={InfoPokemonScreen} />\r\n                        <Route exact path=\"/search\" component={SearchScreen} />\r\n                        <Route exact path=\"/\" component={PokemonScreen}/>\r\n\r\n                        <Redirect to=\"/pokemon\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport './Pokedex.css';\r\n\r\nexport const PokedexApp = () => {\r\n    return (\r\n        <AppRouter/>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PokedexApp } from './PokedexApp';\n\nReactDOM.render(\n    <PokedexApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}